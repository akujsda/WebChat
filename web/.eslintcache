[{"/Users/alexey/Documents/chat/web/src/index.js":"1","/Users/alexey/Documents/chat/web/src/route/appRouter.tsx":"2","/Users/alexey/Documents/chat/web/src/users/user.tsx":"3","/Users/alexey/Documents/chat/web/src/auth/query.ts":"4","/Users/alexey/Documents/chat/web/src/auth/register.tsx":"5","/Users/alexey/Documents/chat/web/src/auth/auth.tsx":"6","/Users/alexey/Documents/chat/web/src/chat/chat.tsx":"7","/Users/alexey/Documents/chat/web/src/chat/messageList.tsx":"8","/Users/alexey/Documents/chat/web/src/chat/query.ts":"9","/Users/alexey/Documents/chat/web/src/chat/sendMessage.tsx":"10","/Users/alexey/Documents/chat/web/src/ui/header.tsx":"11","/Users/alexey/Documents/chat/web/src/reportWebVitals.js":"12","/Users/alexey/Documents/chat/web/src/apolloSetup.ts":"13","/Users/alexey/Documents/chat/web/src/App.tsx":"14","/Users/alexey/Documents/chat/web/src/route/routes.ts":"15"},{"size":291,"mtime":1608201792826,"results":"16","hashOfConfig":"17"},{"size":829,"mtime":1608281788423,"results":"18","hashOfConfig":"17"},{"size":316,"mtime":1608216780141,"results":"19","hashOfConfig":"20"},{"size":339,"mtime":1608302953056,"results":"21","hashOfConfig":"17"},{"size":5810,"mtime":1608282424281,"results":"22","hashOfConfig":"17"},{"size":5680,"mtime":1608725424380,"results":"23","hashOfConfig":"17"},{"size":850,"mtime":1608302364264,"results":"24","hashOfConfig":"17"},{"size":1679,"mtime":1608726494922,"results":"25","hashOfConfig":"17"},{"size":438,"mtime":1608220502216,"results":"26","hashOfConfig":"17"},{"size":2965,"mtime":1608725580037,"results":"27","hashOfConfig":"17"},{"size":1550,"mtime":1608713348686,"results":"28","hashOfConfig":"17"},{"size":362,"mtime":1608029879446,"results":"29","hashOfConfig":"17"},{"size":1375,"mtime":1608726471356,"results":"30","hashOfConfig":"17"},{"size":356,"mtime":1608278117008,"results":"31","hashOfConfig":"17"},{"size":104,"mtime":1608709103786,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"cdf6y6",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qygpck",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/alexey/Documents/chat/web/src/index.js",[],["67","68"],"/Users/alexey/Documents/chat/web/src/route/appRouter.tsx",[],["69","70"],"/Users/alexey/Documents/chat/web/src/users/user.tsx",["71"],"/Users/alexey/Documents/chat/web/src/auth/query.ts",[],"/Users/alexey/Documents/chat/web/src/auth/register.tsx",["72","73","74","75","76"],"import React, { ReactElement, useRef } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {rootRoutes} from '../route/routes'\nimport {UserSignUpM} from './query'\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport {User} from './types'\nimport { Formik, FormikProps, Form } from \"formik\"\nimport * as yup from \"yup\";\nimport {useHistory} from \"react-router-dom\"\n\ninterface CreateAccountInput {\n  email: string\n  password: string\n  name: string\n}\n\nconst initValues: CreateAccountInput = {\n  email:\"\",\n  password:\"\",\n  name:\"\"\n}\n\n\n const validationSchema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().required().min(6),\n  name: yup.string().required()\n})\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const nameInputReference= useRef<HTMLInputElement | null>(null)\n  const emailInputReference= useRef<HTMLInputElement | null>(null)\n  const passwordInputReference= useRef<HTMLInputElement | null>(null)\n  const [userSignUp]=useMutation<User>(UserSignUpM)\n  const history =useHistory()\n\n  const handleSubmit = (event:any , formikBag:any): void =>{\n    console.log(event.target, formikBag)\n  }\n\n  const setNameValue = (formikBag:any): void=>{\n    const nameInput:any = document.getElementById(\"name\")\n    if(nameInput ){\n      formikBag.setFieldValue(\"name\", nameInput.value)\n      console.log(nameInput.value);\n\n    }\n\n  }\n\n  const setPasswordValue = (formikBag:any): void=>{\n    const passwordInput:any = document.getElementById(\"password\")\n    if(passwordInput){\n    formikBag.setFieldValue(\"password\", passwordInput.value)\n    }\n  }\n\n  const setEmailValue = (formikBag:any): void=>{\n    const emailInput:any = document.getElementById(\"email\")\n    if(emailInput){\n    formikBag.setFieldValue(\"email\", emailInput.value)\n    }\n  }\n\n  const  userSignUpAsync = async(values:CreateAccountInput):Promise<void> =>{\n    try {\n     await userSignUp({\n        variables: {\n          input: {\n            email: values.email,\n            name: values.name,\n            password: values.password\n          },\n        },\n      })\n    } catch {}\n    finally{\n      history.push(rootRoutes.login)\n    }\n  }\n\n\n  return (\n    <Formik\n      onSubmit={(values):void => console.log(values)}\n      initialValues={initValues}\n      validationSchema={validationSchema}\n      component={(\n        formikBag: FormikProps<CreateAccountInput>\n    ): ReactElement<FormikProps<CreateAccountInput>> =>{\n      return(\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Form id=\"test\" className={classes.form}  >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                autoFocus\n                ref={nameInputReference}\n                onBlur={():void=>setNameValue(formikBag)}\n                autoComplete= \"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                ref={emailInputReference}\n                onBlur={():void=>setEmailValue(formikBag)}\n                autoComplete= \"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                ref={passwordInputReference}\n                onBlur={():void=>setPasswordValue( formikBag)}\n                autoComplete= \"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={():Promise<void> => userSignUpAsync(formikBag.values)}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href={rootRoutes.login} variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Form>\n      </div>\n    </Container>\n      )\n    }}\n    />\n\n  );\n}\n","/Users/alexey/Documents/chat/web/src/auth/auth.tsx",[],"/Users/alexey/Documents/chat/web/src/chat/chat.tsx",["77","78","79","80"],"import React, { ReactElement, useEffect } from \"react\"\nimport {Box} from \"@material-ui/core\"\nimport {MessageList} from \"./messageList\"\nimport {SendMessage} from \"./sendMessage\"\nimport Cookies from \"js-cookie\"\nimport {useHistory} from \"react-router-dom\"\nimport {rootRoutes} from \"../route/routes\"\ninterface Props{\n  userId: string | null\n}\nconst Chat =({\n  userId\n}:Props):ReactElement =>{\n  const id= Cookies.get(\"userId\")\n  const history = useHistory()\n\n\n  // useEffect(() => {\n  //   !id &&\n  //   history.push(rootRoutes.login)\n  // }, [history, id])\n\n\n\n    return (\n      <Box width=\"100vw\" height=\"90vh\" display=\"flex\" justifyContent=\"center\" >\n        <Box >\n          <MessageList />\n        </Box>\n\n        <Box  position=\"fixed\" bottom=\"0\">\n          <SendMessage userId={userId} />\n        </Box>\n      </Box>\n    )\n\n}\n\nexport default Chat\n","/Users/alexey/Documents/chat/web/src/chat/messageList.tsx",["81"],"/Users/alexey/Documents/chat/web/src/chat/query.ts",[],"/Users/alexey/Documents/chat/web/src/chat/sendMessage.tsx",["82","83","84"],"/Users/alexey/Documents/chat/web/src/ui/header.tsx",["85"],"/Users/alexey/Documents/chat/web/src/reportWebVitals.js",[],"/Users/alexey/Documents/chat/web/src/apolloSetup.ts",[],"/Users/alexey/Documents/chat/web/src/App.tsx",[],"/Users/alexey/Documents/chat/web/src/route/routes.ts",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":18},{"ruleId":"90","severity":1,"message":"94","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":24},{"ruleId":"90","severity":1,"message":"95","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":16},{"ruleId":"90","severity":1,"message":"96","line":10,"column":8,"nodeType":"92","messageId":"93","endLine":10,"endColumn":11},{"ruleId":"90","severity":1,"message":"97","line":17,"column":10,"nodeType":"92","messageId":"93","endLine":17,"endColumn":18},{"ruleId":"90","severity":1,"message":"98","line":72,"column":9,"nodeType":"92","messageId":"93","endLine":72,"endColumn":21},{"ruleId":"90","severity":1,"message":"99","line":1,"column":31,"nodeType":"92","messageId":"93","endLine":1,"endColumn":40},{"ruleId":"90","severity":1,"message":"100","line":7,"column":9,"nodeType":"92","messageId":"93","endLine":7,"endColumn":19},{"ruleId":"90","severity":1,"message":"101","line":14,"column":9,"nodeType":"92","messageId":"93","endLine":14,"endColumn":11},{"ruleId":"90","severity":1,"message":"102","line":15,"column":9,"nodeType":"92","messageId":"93","endLine":15,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":54,"column":6,"nodeType":"105","endLine":54,"endColumn":27,"suggestions":"106"},{"ruleId":"90","severity":1,"message":"99","line":1,"column":31,"nodeType":"92","messageId":"93","endLine":1,"endColumn":40},{"ruleId":"90","severity":1,"message":"100","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":20},{"ruleId":"90","severity":1,"message":"102","line":43,"column":9,"nodeType":"92","messageId":"93","endLine":43,"endColumn":16},{"ruleId":"90","severity":1,"message":"99","line":1,"column":31,"nodeType":"92","messageId":"93","endLine":1,"endColumn":40},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'ListItem' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'useQuery' is defined but never used.","'handleSubmit' is assigned a value but never used.","'useEffect' is defined but never used.","'rootRoutes' is defined but never used.","'id' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messageList'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [subLoading, subData, messageList]",{"range":"112","text":"113"},[1228,1249],"[subLoading, subData, messageList]"]