{"version":3,"sources":["route/routes.ts","auth/query.ts","auth/auth.tsx","auth/register.tsx","chat/query.ts","chat/messageList.tsx","chat/sendMessage.tsx","chat/chat.tsx","ui/header.tsx","route/appRouter.tsx","apolloSetup.ts","i18n/locales.ts","i18n/messages/en-us.ts","i18n/messages/index.ts","i18n/provider.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["rootRoutes","UserSignUpM","gql","UserSignIn","initialValues","email","password","validationSchema","yup","shape","required","matches","min","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","history","useHistory","useMutation","userSignIn","intl","useIntl","messages","userSignIpAsync","formikBag","a","errors","variables","input","values","then","response","get","Cookies","set","push","toast","error","incorrectEmail","position","POSITION","BOTTOM_RIGHT","onSubmit","console","log","component","Container","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","fullWidth","id","label","emailLong","name","autoComplete","inputProps","autocomplete","onChange","emailInput","document","getElementById","setFieldValue","value","setEmailValue","autoFocus","type","passwordInput","setPasswordValue","Button","color","onClick","signIn","Grid","container","item","Link","href","dontHaveAccount","initValues","SignUp","userSignUp","userSignUpAsync","signUp","xs","onBlur","nameInput","setNameValue","justify","alreadyHaveAccount","SendMessageM","GetMessagesQ","NewMessageS","StyledList","styled","ul","StyledItemList","li","MessageList","useState","messageList","setMessageList","useQuery","senderId","data","loading","useEffect","getMessages","useSubscription","subData","subLoading","list","newMessageList","newMessage","scrollTop","scrollHeight","Box","height","overflow","map","message","index","textAlign","marginLeft","padding","senderName","text","StyledTextField","max","SendMessage","sendMessage","userName","sendMessageAsync","resetForm","sendMessageInput","setTextValue","Chat","justifyContent","zIndex","bgcolor","bottom","Header","isLoggedIn","setLoggedIn","isButtonVisible","setButtonVisible","window","location","includes","fontSize","fontWeight","webChat","border","borderRadius","remove","signOut","AppRouter","path","exact","wsLink","WebSocketLink","uri","options","reconnect","connectionParams","autorization","httpLink","HttpLink","authLink","setContext","_","headers","token","link","split","query","definition","getMainDefinition","kind","operation","concat","ApolloClient","cache","InMemoryCache","LOCALES","en","Provider","children","locale","textComponent","Fragment","App","client","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iPAAaA,EACL,IADKA,EAEJ,SAFIA,EAGD,YAHCA,EAIL,Q,yiBCFD,IAAMC,EAAcC,IAAH,KAUXC,EAAaD,IAAH,K,oFCkBjBE,EAA2B,CAC/BC,MAAM,GACNC,SAAS,IAGLC,EAAmBC,MAAaC,MAAM,CAC1CJ,MAAOG,MAAaE,WAAWC,QAAQ,8DACvCL,SAAUE,MAAaE,WAAWE,IAAI,KAGlCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAKjB,SAASa,IACtB,IAAMC,EAAUnB,IACVoB,EAAUC,cAFgB,EAGbC,YAAoBhC,GAAhCiC,EAHyB,oBAI1BC,EAAKC,cAAUC,SAedC,EAAe,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACnBD,EAAUE,OAAOtC,OAAUoC,EAAUE,OAAOrC,SADzB,0CAGhB8B,EAAW,CACdQ,UAAW,CACTC,MAAO,CACLxC,MAAOoC,EAAUK,OAAOzC,MACxBC,SAAUmC,EAAUK,OAAOxC,aAG9ByC,MAAK,SAACC,GACFC,IAAID,EAAU,qBACjBE,IAAQC,IAAI,SAAUF,IAAID,EAAU,uBACpCE,IAAQC,IAAI,WAAYF,IAAID,EAAU,6BACtCE,IAAQC,IAAI,QAASF,IAAID,EAAU,0BACnCf,EAAQmB,KAAKpD,OAfI,sDAmBrBqD,IAAMC,MAAN,UAAejB,EAAKkB,gBAAkB,CACpCC,SAAUH,IAAMI,SAASC,eApBN,+BAwBvBL,IAAMC,MAAN,UAAejB,EAAKkB,gBAAkB,CACpCC,SAAUH,IAAMI,SAASC,eAzBJ,yDAAH,sDA8BtB,OACE,eAAC,WAAD,WACA,cAAC,IAAD,CACAC,SAAU,SAACb,GAAD,OAAiBc,QAAQC,IAAIf,IACvC1C,cAAeA,EACfG,iBAAkBA,EAClBuD,UAAW,SACTrB,GAEA,OACE,eAACsB,EAAA,EAAD,CAAWD,UAAU,OAAOE,SAAS,KAArC,UACA,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWlC,EAAQhB,MAAxB,UACE,cAACmD,EAAA,EAAD,CAAQD,UAAWlC,EAAQV,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC8C,EAAA,EAAD,CAAYN,UAAU,KAAKO,QAAQ,KAAnC,qBAGA,uBAAMH,UAAWlC,EAAQJ,KAAM0C,YAAU,EAAzC,UACE,cAACC,EAAA,EAAD,CACEF,QAAQ,WACR9C,OAAO,SACPb,UAAQ,EACR8D,WAAS,EACTC,GAAG,QACHC,MAAK,UAAKrC,EAAKsC,WACfC,KAAK,QACLC,aAAc,eACdC,WAAY,CACVlD,KAAM,CACJmD,aAAc,QAGlBC,SAAU,kBAvEA,SAACvC,GACrB,IAAMwC,EAAiBC,SAASC,eAAe,SAC5CF,GACHxC,EAAU2C,cAAc,QAASH,EAAWI,OAoEfC,CAAc7C,IACjC8C,WAAS,IAEX,cAAChB,EAAA,EAAD,CACEF,QAAQ,WACR9C,OAAO,SACPb,UAAQ,EACR8D,WAAS,EACTI,KAAK,WACLF,MAAM,WACNc,KAAK,WACLf,GAAG,WACHO,SAAU,kBA1FG,SAACvC,GACxB,IAAMgD,EAAoBP,SAASC,eAAe,YAC/CM,GACHhD,EAAU2C,cAAc,WAAYK,EAAcJ,OAuFrBK,CAAiBjD,IACpCoC,aAAc,iBAEhB,cAACc,EAAA,EAAD,CACEnB,WAAS,EACTH,QAAQ,YACRuB,MAAM,UACN1B,UAAWlC,EAAQF,OACnB+D,QAAS,kBAAmBrD,EAAgBC,IAL9C,mBAOMJ,EAAKyD,UAEX,cAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAMC,KAAMnG,EAAqBqE,QAAQ,QAAzC,mBACMhC,EAAK+D,mCAUvB,cAAC,IAAD,OCvJJ,IAAMC,EAAiC,CACrChG,MAAM,GACNC,SAAS,GACTsE,KAAK,IAIArE,EAAmBC,MAAaC,MAAM,CAC3CJ,MAAOG,MAAaE,WAAWC,QAAQ,8DACvCL,SAAUE,MAAaE,WAAWE,IAAI,GACtCgE,KAAMpE,MAAaE,aAKfG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASoF,IACtB,IAAMtE,EAAUnB,IADe,EAEZsB,YAAkBlC,GAA9BsG,EAFwB,oBAGzBtE,EAASC,cACTG,EAAOC,cAAUC,SAuBhBiE,EAAe,uCAAG,WAAM/D,GAAN,SAAAC,EAAA,yDAClBD,EAAUE,OAAOtC,OAAUoC,EAAUE,OAAOiC,MAASnC,EAAUE,OAAOrC,SADpD,0CAGhBiG,EAAW,CACd3D,UAAW,CACTC,MAAO,CACLxC,MAAOoC,EAAUK,OAAOzC,MACxBuE,KAAMnC,EAAUK,OAAO8B,KACvBtE,SAAUmC,EAAUK,OAAOxC,aARZ,6EAcrB2B,EAAQmB,KAAKpD,GAdQ,4CAiBvBqD,IAAMC,MAAN,UAAejB,EAAKkB,gBAAkB,CACpCC,SAAUH,IAAMI,SAASC,eAlBJ,8DAAH,sDAwBtB,OACE,eAAC,WAAD,WACA,cAAC,IAAD,CACEC,SAAU,kBAAoC4C,KAC9CnG,cAAeiG,EACf9F,iBAAkBA,EAClBuD,UAAW,SACTrB,GAEF,OACF,eAACsB,EAAA,EAAD,CAAWD,UAAU,OAAOE,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWlC,EAAQhB,MAAxB,UACE,cAACmD,EAAA,EAAD,CAAQD,UAAWlC,EAAQV,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC8C,EAAA,EAAD,CAAYN,UAAU,KAAKO,QAAQ,KAAnC,mBACMhC,EAAKoE,UAEX,eAAC,IAAD,CAAMhC,GAAG,OAAOP,UAAWlC,EAAQJ,KAAnC,UACE,eAACmE,EAAA,EAAD,CAAMC,WAAS,EAAC9E,QAAS,EAAzB,UACE,cAAC6E,EAAA,EAAD,CAAME,MAAI,EAACS,GAAI,GAAf,SACE,cAACnC,EAAA,EAAD,CACEK,KAAK,OACLP,QAAQ,WACR3D,UAAQ,EACR8D,WAAS,EACTC,GAAG,OACHC,MAAK,UAAKrC,EAAKuC,MACfW,WAAS,EACToB,OAAQ,kBA3ED,SAAClE,GACpB,IAAMmE,EAAgB1B,SAASC,eAAe,QAC3CyB,GACDnE,EAAU2C,cAAc,OAAQwB,EAAUvB,OAwEfwB,CAAapE,IAC9BoC,aAAc,mBAGlB,cAACkB,EAAA,EAAD,CAAME,MAAI,EAACS,GAAI,GAAf,SACE,cAACnC,EAAA,EAAD,CACEF,QAAQ,WACR3D,UAAQ,EACR8D,WAAS,EACTC,GAAG,QACHC,MAAK,UAAKrC,EAAKsC,WACfC,KAAK,QACL+B,OAAQ,kBAzEA,SAAClE,GACrB,IAAMwC,EAAiBC,SAASC,eAAe,SAC5CF,GACDxC,EAAU2C,cAAc,QAASH,EAAWI,OAsEjBC,CAAc7C,IAC/BoC,aAAc,mBAGlB,cAACkB,EAAA,EAAD,CAAME,MAAI,EAACS,GAAI,GAAf,SACE,cAACnC,EAAA,EAAD,CACEF,QAAQ,WACR3D,UAAQ,EACR8D,WAAS,EACTI,KAAK,WACLF,MAAK,UAAKrC,EAAK/B,UACfkF,KAAK,WACLf,GAAG,WACHkC,OAAQ,kBA7FG,SAAClE,GACxB,IAAMgD,EAAoBP,SAASC,eAAe,YAC/CM,GACDhD,EAAU2C,cAAc,WAAYK,EAAcJ,OA0FvBK,CAAiBjD,IAClCoC,aAAc,sBAIpB,cAACc,EAAA,EAAD,CACEnB,WAAS,EACTH,QAAQ,YACRuB,MAAM,UACN1B,UAAWlC,EAAQF,OACnB+D,QAAS,kBAAoBW,EAAgB/D,IAL/C,mBAOMJ,EAAKoE,UAEX,cAACV,EAAA,EAAD,CAAMC,WAAS,EAACc,QAAQ,WAAxB,SACE,cAACf,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAMC,KAAMnG,EAAkBqE,QAAQ,QAAtC,mBACMhC,EAAK0E,sCAUrB,cAAC,IAAD,O,kjBCnMG,IAAMC,GAAe9G,IAAH,MAQZ+G,GAAe/G,IAAH,MAUZgH,GAAchH,IAAH,M,qXCbxB,IAAMiH,GAAYC,KAAOC,GAAT,MAMVC,GAAgBF,KAAOG,GAAT,MAWPC,GAAc,WACzB,IAAM/C,EAAKvB,IAAQD,IAAI,UACjB2B,EAAO1B,IAAQD,IAAI,YAFkB,EAGNwE,mBAAS,CAAC,KAHJ,mBAGpCC,EAHoC,KAGvBC,EAHuB,OAIjBC,YAASX,GAAc,CAC/CrE,UAAW,CACTiF,SAAUpD,KAFNqD,EAJmC,EAInCA,KAAMC,EAJ6B,EAI7BA,QAMdC,qBAAU,WAERL,EAAeG,EAAKG,eACnB,CAACF,EAASD,IAb8B,MAeEI,YAAgBhB,IAAhDiB,EAf8B,EAepCL,KAAwBM,EAfY,EAerBL,QAoBtB,OAhBAC,qBAAU,WACR,IAAMK,EAAOnD,SAASC,eAAe,eACrC,GAAKgD,GAAWE,EAAM,CAEpB,IAAMC,EAAe,GAAD,oBAAMZ,GAAN,CAAmBS,EAAQI,aAE/CZ,EAAeW,GACfD,EAAKG,UAAYH,EAAKI,gBAIvB,CAACL,EAAYD,IAMd,cAACO,GAAA,EAAD,CAAK7G,MAAM,QAAQ8G,OAAO,OAAOlE,GAAG,cAAcmE,SAAS,SAA3D,SACE,cAACzB,GAAD,WACIY,GAAWL,GAAgBA,EAAYmB,KAAI,SAACC,EAAaC,GACzD,OACE,eAACzB,GAAD,WACE,eAACoB,GAAA,EAAD,CAAKM,UAAU,OAAOC,WAAW,OAAOC,QAAQ,MAAMtD,MAAOhB,IAASkE,EAAQK,WAAa,UAAY,QAAvG,UAAiHL,EAAQK,WAAzH,QACA,cAACT,GAAA,EAAD,CAAKzH,UAAU,OAAOiI,QAAQ,MAA9B,SAAqCJ,EAAQM,SAF1BL,W,4ICpDjC,IAAMM,GAAgBjC,aAAO7C,IAAP6C,CAAD,MAWfhH,GAAiC,CACrCyH,SAAU,GACVuB,KAAK,IAGD7I,GAAmBC,MAAaC,MAAM,CAC1C2I,KAAM5I,MAAaE,WAAW4I,IAAI,KAClCzB,SAAUrH,MAAaE,aAIZ6I,GAAc,WAAmB,IAAD,EACrBpH,YAAqB6E,IAApCwC,EADoC,oBAErC/E,EAAIvB,IAAQD,IAAI,UAChBwG,EAAUvG,IAAQD,IAAI,YAarByG,EAAgB,uCAAG,WAAMjH,GAAN,SAAAC,EAAA,0DACrBD,EAAUK,OAAOsG,MAAS3G,EAAUE,OAAOyG,KADtB,0CAGjBI,EAAY,CACf5G,UAAW,CACTC,MAAO,CACLgF,SAAUpD,EACV2E,KAAM3G,EAAUK,OAAOsG,KACvBD,WAAYM,MARI,6EActBhH,EAAUkH,YAdY,4CAiBxBtG,IAAMC,MAAM,yBAAyB,CACnCE,SAAUH,IAAMI,SAASC,eAE3BjB,EAAUkH,YApBc,8DAAH,sDAwBvB,OACE,eAAC,WAAD,WACA,cAAC,IAAD,CACAhG,SAAU,kBAAuC6F,KACjDpJ,cAAeA,GACfG,iBAAkBA,GAClBuD,UAAW,SACTrB,GAEA,OACE,eAACiG,GAAA,EAAD,CAAK7G,MAAM,QAAX,UACA,cAACwH,GAAD,CACC5E,GAAG,mBAAmB/D,UAAQ,EAAE2D,QAAQ,WACxCQ,aAAa,MACbG,SAAU,kBA9CI,SAACvC,GACpB,IAAMmH,EAAuB1E,SAASC,eAAe,oBAClDyE,GACHnH,EAAU2C,cAAc,OAAQwE,EAAiBvE,OA2CxBwE,CAAapH,IACjCqC,WAAY,CACVD,aAAa,UAIhB,cAAC6D,GAAA,EAAD,CAAKzH,UAAU,OAAf,SACE,cAAC0E,EAAA,EAAD,CAAStB,QAAQ,YAAYuB,MAAM,UAAUC,QAAS,kBAAmB6D,EAAiBjH,IAA1F,2BAON,cAAC,IAAD,QC7DWqH,GAjCF,WACX,IAAMrF,EAAIvB,IAAQD,IAAI,UAChBhB,EAAUC,cASd,OAPF8F,qBAAU,YACPvD,GACDxC,EAAQmB,KAAKpD,KACZ,CAACiC,EAASwC,IAKT,eAACiE,GAAA,EAAD,CAAK7G,MAAM,QAAQ8G,OAAO,OAAOxH,QAAQ,OAAO4I,eAAe,SAA/D,UACE,cAACrB,GAAA,EAAD,UACE,cAAC,GAAD,MAGF,cAACA,GAAA,EAAD,CACE7G,MAAM,QACN2B,SAAS,WACTwG,OAAO,KACPC,QAAQ,QACRC,OAAO,IACP/I,QAAQ,OACR4I,eAAe,SAPjB,SASE,cAAC,GAAD,UCwBKI,GApDA,WACb,IAAM9H,EAAOC,cAAUC,SACjBN,EAAQC,cAFkB,EAGEuF,oBAAkB,GAHpB,mBAGzB2C,EAHyB,KAGbC,EAHa,OAIY5C,oBAAkB,GAJ9B,mBAIzB6C,EAJyB,KAIRC,EAJQ,KAOhCvC,qBAAU,WACR,IAAMvD,EAAIvB,IAAQD,IAAI,UACTC,IAAQD,IAAI,aACdwB,IACTxC,EAAQmB,KAAKpD,GACbqK,GAAY,MAGb,IAEHrC,qBAAU,WACRuC,GAAkBC,OAAOC,SAAStE,KAAKuE,SAAS1K,MAC/C,IAeH,OACE,eAAC0I,GAAA,EAAD,CAAK7G,MAAM,QAAQ8G,OAAO,OAAOsB,QAAQ,UAAU9I,QAAQ,OAAO4I,eAAe,SAAS1I,WAAW,SAArG,UAEE,eAACqH,GAAA,EAAD,CAAK7G,MAAM,OAAOV,QAAQ,OAAO4I,eAAe,aAAad,WAAW,OAAO0B,SAAS,OAAO/E,MAAM,QAAQgF,WAAW,MAAxH,wBAAoIvI,EAAKwI,SAAzI,OAEA,cAACnC,GAAA,EAAD,CAAKvH,QAAQ,OAAO4I,eAAe,WAAWlI,MAAM,OAApD,SAEGyI,GACD,cAAC5B,GAAA,EAAD,CAAKuB,QAAQ,QAAQa,OAAO,kBAAkBC,aAAa,OAAOxJ,OAAO,WAAWoH,OAAO,OAAOK,UAAU,SAA5G,SACE,cAACrD,EAAA,EAAD,CAASE,QAASuE,EAtBZ,WACZlH,IAAQ8H,OAAO,UACf9H,IAAQ8H,OAAO,YACf9H,IAAQ8H,OAAO,SACf/I,EAAQmB,KAAKpD,GACbqK,GAAY,IAGD,WACXA,GAAY,GACZpI,EAAQmB,KAAKpD,IAYwC4F,MAAM,UAArD,SAA0E,UAAVwE,EAAgB/H,EAAK4I,QAAe5I,EAAKyD,kBClBpGoF,GAvBW,WAExB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAMnL,EAAb,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOmL,KAAMnL,EAAkBoL,OAAK,EAApC,SACE,cAACrJ,EAAD,MAGF,cAAC,IAAD,CAAOoJ,KAAMnL,EAAqBoL,OAAK,EAAvC,SACE,cAAC9E,EAAD,MAGF,cAAC,IAAD,CAAO6E,KAAMnL,EAAiBoL,OAAK,EAAnC,SACE,cAAC,GAAD,U,2ECjBFC,GAAS,IAAIC,KAAc,CAC/BC,IAAI,gCACJC,QAAS,CACPC,WAAW,EACXC,iBAAkB,iBAAO,CACvBC,aAAczI,IAAQD,IAAI,SAAZ,iBAAiCC,IAAQD,IAAI,UAAa,QAKxE2I,GAAW,IAAIC,KAAS,CAC5BN,IAAK,oCAGDO,GAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAE1BC,EAAQhJ,IAAQD,IAAI,SAE1B,MAAO,CACLgJ,QAAQ,6BACHA,GADE,IAELN,aAAcO,EAAK,iBAAaA,GAAU,SAK1CC,GAAOC,cAEX,YAAgB,IAAbC,EAAY,EAAZA,MACKC,EAAaC,aAAkBF,GACrC,MACsB,wBAApBC,EAAWE,MACc,iBAAzBF,EAAWG,YAGfpB,GACAS,GAASY,OAAOd,KAGH,OAAIe,KAAa,CAC9BC,MAAO,IAAIC,KACXV,U,UClDWW,GACF,Q,UCEI,mBACdA,GAAiB,CAClB,OAAS,UACT,OAAS,UACT,QAAU,WACV,MAAQ,QACR,UAAY,gBACZ,SAAW,WACX,KAAO,OACP,mBAAqB,mCACrB,gBAAkB,iCAClB,eAAiB,sCACjB,QAAU,YCZK,mBACRC,ICoBQC,GAdiB,SAAC,GACV,IADWC,EACZ,EADYA,SACZ,IADsBC,cACtB,MAD6BJ,GAC7B,EACpB,OACA,cAAC,KAAD,CACEI,OAAQA,EACRC,cAAeC,WACf7K,SAAUA,GAAS2K,GAHrB,SAKGD,KCCUI,OAZf,WACE,OACE,cAAC,IAAD,CAAgBC,OAAQA,GAAxB,SACE,cAAC,GAAD,CAAcJ,OAAQJ,GAAtB,SACA,qBAAK5I,UAAU,MAAf,SACE,cAAC,GAAD,WCAOqJ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1K,MAAK,YAAkD,IAA/C2K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF/I,SAASC,eAAe,SAI1BoI,O","file":"static/js/main.e2a5c6c3.chunk.js","sourcesContent":["export const rootRoutes = {\n  root: \"/\",\n  login: \"/login\",\n  register: \"/register\",\n  chat: \"/chat\",\n}\n","import gql from \"graphql-tag\"\n\nexport const UserSignUpM = gql`\n  mutation createUser($input: NewUser!){\n    createUser(input: $input){\n      name\n      email\n      id\n    }\n  }\n`\n\nexport const UserSignIn = gql`\n  mutation userSignIn($input: UserSignInInput!){\n    userSignIn(input: $input){\n      id\n      userName\n      token\n    }\n  }\n`\n","/* eslint-disable no-useless-escape */\nimport React, { ReactElement, Fragment } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {rootRoutes} from '../route/routes'\nimport {UserSignIn} from \"./query\"\nimport {  useMutation } from \"@apollo/react-hooks\"\nimport { Formik, FormikProps } from \"formik\"\nimport * as yup from \"yup\";\nimport {useHistory} from \"react-router-dom\"\nimport get from \"lodash/get\"\nimport Cookies from \"js-cookie\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {useIntl} from 'react-intl';\n\n\ninterface SignInInput {\n  email:string\n  password:string\n}\n\nconst initialValues:SignInInput= {\n  email:\"\",\n  password:\"\"\n}\n\nconst validationSchema = yup.object().shape({\n  email: yup.string().required().matches(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/),\n  password: yup.string().required().min(6),\n})\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport default function SignIn () {\n  const classes = useStyles();\n  const history = useHistory()\n  const [userSignIn]=useMutation<string>(UserSignIn)\n  const intl=useIntl().messages;\n  const setPasswordValue = (formikBag:any): void=>{\n    const passwordInput:any = document.getElementById(\"password\")\n    if(passwordInput){\n    formikBag.setFieldValue(\"password\", passwordInput.value)\n    }\n  }\n\n  const setEmailValue = (formikBag:any): void=>{\n    const emailInput:any = document.getElementById(\"email\")\n    if(emailInput){\n    formikBag.setFieldValue(\"email\", emailInput.value)\n    }\n  }\n\n  const  userSignIpAsync = async(formikBag:FormikProps<SignInInput>):Promise<void> =>{\n    if(!formikBag.errors.email && !formikBag.errors.password){\n    try {\n     await userSignIn({\n        variables: {\n          input: {\n            email: formikBag.values.email,\n            password: formikBag.values.password\n          },\n        },\n      }).then((response: any):void =>{\n         if (get(response, \"data.userSignIn\")){\n          Cookies.set(\"userId\", get(response, \"data.userSignIn.id\"))\n          Cookies.set(\"userName\", get(response, \"data.userSignIn.userName\"))\n          Cookies.set(\"token\", get(response, \"data.userSignIn.token\"))\n          history.push(rootRoutes.chat)\n         }\n        })\n    } catch {\n      toast.error(`${intl.incorrectEmail}`, {\n        position: toast.POSITION.BOTTOM_RIGHT\n      })\n    }\n  }else{\n    toast.error(`${intl.incorrectEmail}`, {\n      position: toast.POSITION.BOTTOM_RIGHT\n    })\n  }\n  }\n\n  return (\n    <Fragment>\n    <Formik\n    onSubmit={(values):void => console.log(values)}\n    initialValues={initialValues}\n    validationSchema={validationSchema}\n    component={(\n      formikBag\n    ): ReactElement<FormikProps<SignInInput>> =>{\n      return(\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label={`${intl.emailLong}`}\n              name=\"email\"\n              autoComplete= \"new-password\"\n              inputProps={{\n                form: {\n                  autocomplete: 'off',\n                },\n              }}\n              onChange={():void=>setEmailValue(formikBag)}\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={():void=>setPasswordValue(formikBag)}\n              autoComplete= \"new-password\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={():Promise<void>=> userSignIpAsync(formikBag)}\n            >\n              {`${intl.signIn}`}\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href={rootRoutes.register} variant=\"body2\">\n                  {`${intl.dontHaveAccount}`}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n      )\n    }}\n    />\n    <ToastContainer />\n    </Fragment>\n  );\n}\n","/* eslint-disable no-useless-escape */\nimport React, { ReactElement, Fragment } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {rootRoutes} from '../route/routes'\nimport {UserSignUpM} from './query'\nimport { useMutation } from \"@apollo/react-hooks\"\nimport {User} from './types'\nimport { Formik, FormikProps, Form } from \"formik\"\nimport * as yup from \"yup\";\nimport {useHistory} from \"react-router-dom\"\nimport {useIntl} from 'react-intl';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ExecutionResult } from 'graphql';\n\ninterface CreateAccountInput {\n  email: string\n  password: string\n  name: string\n}\n\nconst initValues: CreateAccountInput = {\n  email:\"\",\n  password:\"\",\n  name:\"\"\n}\n\n\n const validationSchema = yup.object().shape({\n  email: yup.string().required().matches(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/),\n  password: yup.string().required().min(6),\n  name: yup.string().required()\n})\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [userSignUp]=useMutation<User>(UserSignUpM)\n  const history =useHistory()\n  const intl = useIntl().messages\n\n  const setNameValue = (formikBag:any): void=>{\n    const nameInput:any = document.getElementById(\"name\")\n    if(nameInput ){\n      formikBag.setFieldValue(\"name\", nameInput.value)\n    }\n  }\n\n  const setPasswordValue = (formikBag:any): void=>{\n    const passwordInput:any = document.getElementById(\"password\")\n    if(passwordInput){\n      formikBag.setFieldValue(\"password\", passwordInput.value)\n    }\n  }\n\n  const setEmailValue = (formikBag:any): void=>{\n    const emailInput:any = document.getElementById(\"email\")\n    if(emailInput){\n      formikBag.setFieldValue(\"email\", emailInput.value)\n    }\n  }\n\n  const  userSignUpAsync = async(formikBag:FormikProps<CreateAccountInput>):Promise<void> =>{\n    if (!formikBag.errors.email && !formikBag.errors.name && !formikBag.errors.password){\n    try {\n     await userSignUp({\n        variables: {\n          input: {\n            email: formikBag.values.email,\n            name: formikBag.values.name,\n            password: formikBag.values.password\n          },\n        },\n      })\n    } catch {}\n    finally{\n      history.push(rootRoutes.login)\n    }\n  }else{\n    toast.error(`${intl.incorrectEmail}`, {\n      position: toast.POSITION.BOTTOM_RIGHT\n    })\n  }\n  }\n\n\n  return (\n    <Fragment>\n    <Formik\n      onSubmit={():Promise<ExecutionResult<User>> =>userSignUp()}\n      initialValues={initValues}\n      validationSchema={validationSchema}\n      component={(\n        formikBag: FormikProps<CreateAccountInput>\n    ): ReactElement<FormikProps<CreateAccountInput>> =>{\n      return(\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {`${intl.signUp}`}\n        </Typography>\n        <Form id=\"test\" className={classes.form}  >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label={`${intl.name}`}\n                autoFocus\n                onBlur={():void=>setNameValue(formikBag)}\n                autoComplete= \"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label={`${intl.emailLong}`}\n                name=\"email\"\n                onBlur={():void=>setEmailValue(formikBag)}\n                autoComplete= \"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label={`${intl.password}`}\n                type=\"password\"\n                id=\"password\"\n                onBlur={():void=>setPasswordValue(formikBag)}\n                autoComplete= \"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={():Promise<void> => userSignUpAsync(formikBag)}\n          >\n            {`${intl.signUp}`}\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href={rootRoutes.login} variant=\"body2\">\n                {`${intl.alreadyHaveAccount}`}\n              </Link>\n            </Grid>\n          </Grid>\n        </Form>\n      </div>\n    </Container>\n      )\n    }}\n    />\n    <ToastContainer />\n  </Fragment>\n  );\n}\n","import gql from \"graphql-tag\"\n\n\nexport const SendMessageM = gql`\n  mutation sendMessage($input: NewMessage!){\n    sendMessage(input: $input){\n      text\n    }\n  }\n`\n\nexport const GetMessagesQ = gql`\n  query getMessages($senderId: String){\n    getMessages(senderId: $senderId){\n      text\n      senderName\n      date\n    }\n  }\n`\n\nexport const NewMessageS = gql`\n  subscription{\n    newMessage {\n    text\n    date\n    senderName\n  }\n  }\n\n`\n","import React, { ReactElement, useEffect, useState } from \"react\"\nimport {Box} from \"@material-ui/core\"\nimport { useQuery, useSubscription } from \"@apollo/react-hooks\"\nimport {GetMessagesQ, NewMessageS} from \"./query\"\nimport Cookies from \"js-cookie\"\nimport styled from 'styled-components'\n\n\nconst StyledList= styled.ul`\n  padding-left:10px;\n  padding-right:10px;\n  list-style:none;\n`\n\nconst StyledItemList= styled.li`\n  padding-bottom: 10px;\n  padding-top: 10px;\n  border: 1px solid rgb(63, 81, 181);\n  border-radius: 10px;\n  margin-top:10px;\n  margin-bottom:10px;\n`\n\n\n\nexport const MessageList = ():ReactElement =>{\n  const id = Cookies.get(\"userId\")\n  const name = Cookies.get(\"userName\")\n  const [messageList, setMessageList]= useState([\"\"])\n  const { data, loading } = useQuery(GetMessagesQ, {\n    variables: {\n      senderId: id\n    },\n  })\n\n  useEffect(() => {\n\n    setMessageList(data.getMessages)\n  }, [loading, data])\n\n  const {data: subData, loading: subLoading} = useSubscription(NewMessageS)\n\n\n\n  useEffect(() => {\n    const list = document.getElementById(\"messageList\")\n    if(!!subData && list ){\n\n      const newMessageList= [...messageList, subData.newMessage]\n\n      setMessageList(newMessageList)\n      list.scrollTop = list.scrollHeight\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subLoading, subData])\n\n\n\n\n  return (\n    <Box width=\"100vw\" height=\"70vh\" id=\"messageList\" overflow=\"scroll\">\n      <StyledList >\n        {!loading && messageList  && messageList.map((message:any, index:number)=> {\n          return (\n            <StyledItemList key={index} >\n              <Box textAlign=\"left\" marginLeft=\"10px\" padding=\"5px\" color={name === message.senderName ? \"#3f51b5\" : \"black\"}>{message.senderName}: </Box>\n              <Box marginTop=\"20px\" padding=\"5px\">{message.text}</Box>\n            </StyledItemList>\n          )\n        }\n        )}\n      </StyledList>\n    </Box>\n  )\n}\n","import React, { ReactElement, Fragment } from \"react\"\nimport {TextField, Box, Button} from \"@material-ui/core\"\nimport {  useMutation } from \"@apollo/react-hooks\"\nimport {SendMessageM} from \"./query\"\nimport {Message} from \"./types\"\nimport {Formik, FormikProps} from \"formik\"\nimport * as yup from 'yup'\nimport Cookies from \"js-cookie\"\nimport styled from 'styled-components'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ExecutionResult } from \"graphql\"\n\nconst StyledTextField=styled(TextField)`\n  width:300px;\n  border:1px solid #3f51b5;\n  border-radius:5px;\n`\n\ninterface SendMessageInput {\n  senderId: string\n  text:string\n}\n\nconst initialValues:SendMessageInput = {\n  senderId: \"\",\n  text:\"\"\n}\n\nconst validationSchema = yup.object().shape({\n  text: yup.string().required().max(500),\n  senderId: yup.string().required(),\n})\n\n\nexport const SendMessage = ():ReactElement =>{\n  const [sendMessage] = useMutation<Message>(SendMessageM)\n  const id= Cookies.get(\"userId\")\n  const userName= Cookies.get(\"userName\")\n\n\n\n\n  const setTextValue = (formikBag:any): void=>{\n    const sendMessageInput:any = document.getElementById(\"sendMessageInput\")\n    if(sendMessageInput){\n    formikBag.setFieldValue(\"text\", sendMessageInput.value)\n    }\n  }\n\n\n  const  sendMessageAsync = async(formikBag:FormikProps<SendMessageInput>):Promise<void> =>{\n    if(formikBag.values.text && !formikBag.errors.text){\n    try {\n     await sendMessage({\n        variables: {\n          input: {\n            senderId: id,\n            text: formikBag.values.text,\n            senderName: userName\n          },\n        },\n      })\n    } catch {}\n    finally{\n      formikBag.resetForm()\n    }\n  }else{\n    toast.error(\"Max lenght 500 simbols\",{\n      position: toast.POSITION.BOTTOM_RIGHT\n    })\n    formikBag.resetForm()\n  }\n  }\n\n  return (\n    <Fragment>\n    <Formik\n    onSubmit={():Promise<ExecutionResult<Message>> =>sendMessage()}\n    initialValues={initialValues}\n    validationSchema={validationSchema}\n    component={(\n      formikBag\n    ): ReactElement<FormikProps<SendMessageInput>> =>{\n      return(\n        <Box width=\"300px\"   >\n        <StyledTextField\n         id=\"sendMessageInput\" required  variant=\"outlined\"\n         autoComplete=\"off\"\n         onChange={():void=> setTextValue(formikBag)}\n         inputProps={{\n           autoComplete:\"none\"\n         }}\n          />\n\n        <Box marginTop=\"10px\" >\n          <Button  variant=\"contained\" color=\"primary\" onClick={():Promise<void>=> sendMessageAsync(formikBag)} >send </Button>\n        </Box>\n\n      </Box>\n        )\n        }}\n    />\n    <ToastContainer />\n  </Fragment>\n  )}\n","import React, { ReactElement, useEffect } from \"react\"\nimport {Box} from \"@material-ui/core\"\nimport {MessageList} from \"./messageList\"\nimport {SendMessage} from \"./sendMessage\"\nimport Cookies from \"js-cookie\"\nimport {useHistory} from \"react-router-dom\"\nimport {rootRoutes} from \"../route/routes\"\n\n\nconst Chat = ():ReactElement =>{\n  const id= Cookies.get(\"userId\")\n  const history = useHistory()\n\n  useEffect(() => {\n    !id &&\n    history.push(rootRoutes.login)\n  }, [history, id])\n\n\n\n    return (\n      <Box width=\"100vw\" height=\"90vh\" display=\"flex\" justifyContent=\"center\" >\n        <Box >\n          <MessageList />\n        </Box>\n\n        <Box \n          width=\"100vw\" \n          position=\"absolute\" \n          zIndex=\"10\" \n          bgcolor=\"white\" \n          bottom=\"0\" \n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <SendMessage />\n        </Box>\n      </Box>\n    )\n\n}\n\nexport default Chat\n","import React, { ReactElement, useEffect, useState } from 'react'\nimport {Box,  Button} from '@material-ui/core'\nimport Cookies from \"js-cookie\"\nimport {useHistory} from \"react-router-dom\"\nimport {rootRoutes} from \"../route/routes\"\nimport {useIntl} from 'react-intl';\n\nconst Header = (): ReactElement =>{\n  const intl = useIntl().messages\n  const history=useHistory()\n  const [isLoggedIn, setLoggedIn] = useState<boolean>(false)\n  const [isButtonVisible, setButtonVisible] = useState<boolean>(false)\n\n\n  useEffect(() => {\n    const id= Cookies.get(\"userId\")\n    const name = Cookies.get(\"userName\")\n    if(name && id){\n      history.push(rootRoutes.chat)\n      setLoggedIn(true)\n    }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    setButtonVisible(!window.location.href.includes(rootRoutes.login))\n  }, [])\n\n  const logout =():void=>{\n    Cookies.remove(\"userId\")\n    Cookies.remove(\"userName\")\n    Cookies.remove(\"token\")\n    history.push(rootRoutes.login)\n    setLoggedIn(false)\n  }\n\n  const login =():void =>{\n    setLoggedIn(true)\n    history.push(rootRoutes.login)\n  }\n\n  return (\n    <Box width=\"100vw\" height=\"50px\" bgcolor=\"#3f51b5\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n\n      <Box width=\"50vw\" display=\"flex\" justifyContent=\"flex-start\" marginLeft=\"10px\" fontSize=\"32px\" color=\"white\" fontWeight=\"500\" > {`${intl.webChat}`} </Box>\n\n      <Box display=\"flex\" justifyContent=\"flex-end\" width=\"50vw\">\n\n        {isButtonVisible && (\n        <Box bgcolor=\"white\" border=\"1px solid white\" borderRadius=\"10px\" margin=\"5px 10px\" height=\"40px\" textAlign=\"center\">\n          <Button  onClick={isLoggedIn ? logout : login} color=\"primary\">{isLoggedIn ? `${intl.signOut}` : `${intl.signIn}`}</Button>\n        </Box>\n        )}\n\n      </Box>\n    </Box>\n  )\n}\n\nexport default Header\n","import React from 'react';\n\nimport {BrowserRouter as Router, Route, } from 'react-router-dom';\nimport {rootRoutes} from './routes'\nimport SignIn from \"../auth/auth\"\nimport SignUp from \"../auth/register\"\nimport Chat from \"../chat/chat\"\nimport Header from \"../ui/header\"\n\nconst AppRouter: React.FC=():React.ReactElement=> {\n\n  return (\n    <Router >\n      <Route path={rootRoutes.root}>\n        <Header />\n      </Route>\n\n      <Route path={rootRoutes.login} exact>\n        <SignIn  />\n      </Route>\n\n      <Route path={rootRoutes.register} exact>\n        <SignUp />\n      </Route>\n\n      <Route path={rootRoutes.chat} exact>\n        <Chat  />\n      </Route>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-client';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport Cookies from 'js-cookie';\nimport { setContext } from 'apollo-link-context';\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://18.222.35.142:80/graphql`,\n  options: {\n    reconnect: true,\n    connectionParams: () => ({\n      autorization: Cookies.get(\"token\") ? `Bearer ${Cookies.get(\"token\")}` : \"\",\n    }),\n  },\n});\n\nconst httpLink = new HttpLink({\n  uri: 'http://18.222.35.142:80/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = Cookies.get('token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      autorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nexport default new ApolloClient({\n  cache: new InMemoryCache(),\n  link\n});\n","export const LOCALES={\n  ENGLISH: 'en-us',\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport {LOCALES} from '../locales';\n\nexport default {\n[LOCALES.ENGLISH]:{\n\"signIn\":\"Sign in\",\n\"signUp\":\"Sign up\",\n\"signOut\":\"Sign out\",\n\"email\":\"Email\",\n\"emailLong\":\"Email address\",\n\"password\":\"Password\",\n\"name\":\"Name\",\n\"alreadyHaveAccount\":\"Already have an account? Sign in\",\n\"dontHaveAccount\":\"Don't have an account? Sign Up\",\n\"incorrectEmail\":\"Email or password entered incorrect\",\n\"webChat\":\"WebChat\"\n}\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport en from './en-us'\n\nexport default {\n    ...en,\n}\n","import React, {Fragment} from 'react';\nimport {IntlProvider} from 'react-intl';\nimport {LOCALES} from './locales';\nimport messages from './messages';\n\ninterface Props{\n    children:React.ReactElement,\n    locale:string,\n}\n\nconst Provider:React.FC<Props> =({children, locale=LOCALES.ENGLISH},\n):React.ReactElement=>{\n  return (\n  <IntlProvider\n    locale={locale}\n    textComponent={Fragment}\n    messages={messages[locale]}\n  >\n    {children}\n  </IntlProvider>\n  )\n};\n\n\nexport default Provider;\n","import './App.css';\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport AppRouter from \"./route/appRouter\"\nimport client from \"./apolloSetup\"\nimport React from \"react\"\nimport {I18nProvider, LOCALES} from './i18n';\n\nfunction App() {\n  return (\n    <ApolloProvider client={client }>\n      <I18nProvider locale={LOCALES.ENGLISH}>\n      <div className=\"App\">\n        <AppRouter />\n      </div>\n      </I18nProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}